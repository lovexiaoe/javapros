正则表达式是一个字符串。由字面值字符和特殊符号组成。
其中的特殊字符如下：
  \\d    任何数字                     \\D      任何非数字
  \\w    任何词字符                 \\W      任何非词字符
  \\s    任何空白符                 \\S      任何非空白符
  |     或者
  .     匹配换行符以外的任何字符。
  ^     匹配字符串的开始。
  $     匹配字符串的结尾。
  []    字符集，如[xyz] 匹配xyz中的其中之一。
  [^]   反向字符集，如[^xyz]，非xyz。
  [a-z] 字符集。a到z。对应的反向字符集[^a-z]
  
当然，特殊字符不止这些，比如[A-Z]匹配A-Z的大写字母。[^Z]匹配除Z之外的任何字符。[A-Za-z]表示匹配大小写字母。
  
 量词：
  *     匹配0或者多次
  +     匹配1或者多次
  ?     匹配0或者1次
  {n}   匹配n次。
  {n,}  匹配至少n次
  {n,m} 匹配n到m次（包括二者）。

在其他语言的正则表达式中，\\在中表示一个普通的反斜杠，没有其他特殊的意义。
在java的正则表达式中，\\表示：我要插入一个表达式的反斜杠，其后面的字符具有特殊意义。
所以在java中，两个反斜杠代表一个\，这也就是为什么表示数字是\\d，而表示一个普通的反斜杠为\\\\。



  
正则表达式的匹配有两种，一种是String.matches,别一种是java.util.regex包中的类。
