重点掌握：代理，适配器，装饰器。过滤器。

静态代理：你帮我去打水，回来了通知我一声（代理前后可加入一些动作），前提是你和我都会打水（都实现打水接口）。
动态代理：我是个变形金刚，你钻进我的身体里（创建时使用handler.newProxyInstance获取你的变身版本，你将拥有我的超能力。）
        你可以通过可控制面板控制我的超能力（变形金刚是一个实现了InvocationHandler接口的Handler对象，可以在其invoke方法中定义超能力）

适配器：我是人类，只会行走，不会飞行，但是我可以拥有一只大鹏，让它驾着我飞行，我现在即会走路，也会飞行，（目标接口）（对象适配）。
        我也可以拥有大鹏的基因，长出一对翅膀（基因专家出马），让我变成大鹏（继承大鹏这个类）。我同样会走路，也会飞行了（目标接口）（类适配）

装饰器：可以让你这个人类拥有飞翔的能力，既不会让你去驯服一只大鹏，也不会让你基因突变（这些是内部变化，需要对类进行修改）。
        但是我有一只飞机（装饰器），只需要用飞机装饰你，飞机飞行，便也是你在飞行了（实际操作的是飞机。）。
        装饰器是不需要对一个对象内部改造，而让它拥有额外的新功能。

过滤器：也称为准则模式，可以让不同的准则过滤一系列对象，并将这些准则解耦，连接起来。

桥接模式：当一个时间有引起它变化的多个因素时，可以将这些因素拆分并连接起来。如开车会有3个不同的因素，什么路，什么人，开什么样的车。
        桥接模式适合一个动作有多个维度的情况。称为：分解并连接，更能表达其意思。