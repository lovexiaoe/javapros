Java 泛型（generics）是 JDK 5 中引入的一个新特性, 泛型提供了编译时类型安全检测机制，该机制允许程序员在编译时检测到非法的类型。
虚拟机没有泛型类型对象，所有的对象都属于普通类。泛型的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数。

1,不能用基本类型实例化类型参数
	如没有Pair<double>，只有Pair<Double>。Pair<String>[] table 也是不合法的
2，运行时类型检查只能检查原始类型，不能检查出参数化类型。
	如if(a instanceof Pair<String>)，只能检查出a是一个Pair，getClass也是同样的，只能得到原始类型。
3，在类或者接口的继承层级关系中，要注意类型擦除引起的冲突。如：
	class Calendar implements Comparable<Calendar>{...}
	class GregorianCalendar extends Calendar implements Comparable<GregorianCalendar> //error
	GregorianCalendar会实现Comparable接口的Comparable<Calendar>和Comparable<GregorianCalendar>
	这是不同参数化。在类型擦除后会冲突。
    