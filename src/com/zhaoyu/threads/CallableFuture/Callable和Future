Runnable可以想像成是一个没有参数和返回值的异步方法。
Callable和Runnable类似。但是有返回值。Callable接口是一个参数化的类型。只有一个方法call。
	public interface Callable<V>{
		V call() throws Exception;
	}
如,Callable<Integer>表示一个整型对象的异步调用。

Future保存异步计算的结果。可以启动一个计算，将Future对象交给某个线程，然后忘掉 它，Future对象的所有者在结果计算好之后就可以获得它。
Future接口具有下列方法：
	public interface Future<V>{
		V get() throws...;
		V get(long timeout,TimeUnit unit)throws...;
		void cancel(boolean mayInterrupt);
		boolean isCancelled();
		boolean isDone();
	}
	
get方法阻塞调用，直到计算结果完成 。第二个get方法调用超时会抛出一个TimeoutException异常。如果运行的计算的线程被中断，两个方法都将
抛出InterruptedException。

	

	
	
	
